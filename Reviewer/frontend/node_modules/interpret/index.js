var path = require('path');

var endsInBabelJs = /\.babel\.[jt]s(x)$/;

var mjsStub = path.join(__dirname, 'mjs-stub');

function ignoreNonBabelAndNodeModules(file) {
  return !endsInBabelJs.test(file) &&
    path.relative(process.cwd(), file).split(path.sep).indexOf('node_modules') >= 0;
}

var extensions = {
  '.babel.js': [
    {
      module: '@babel/register',
      register: function(hook) {
        hook({
          extensions: '.js',
          rootMode: 'upward-optional',
          ignore: [ignoreNonBabelAndNodeModules],
        });
      },
    },
    {
      module: 'babel-register',
      register: function(hook) {
        hook({
          extensions: '.js',
          ignore: ignoreNonBabelAndNodeModules,
        });
      },
    },
    {
      module: 'babel-core/register',
      register: function(hook) {
        hook({
          extensions: '.js',
          ignore: ignoreNonBabelAndNodeModules,
        });
      },
    },
    {
      module: 'babel/register',
      register: function(hook) {
        hook({
          extensions: '.js',
          ignore: ignoreNonBabelAndNodeModules,
        });
      },
    },
  ],
  '.babel.ts': [
    {
      module: '@babel/register',
      register: function(hook) {
        hook({
          extensions: '.ts',
          rootMode: 'upward-optional',
          ignore: [ignoreNonBabelAndNodeModules],
        });
      },
    },
  ],
  '.buble.js': 'buble/register',
  '.cirru': 'cirru-script/lib/register',
  '.cjsx': 'node-cjsx/register',
  '.co': 'coco',
  '.coffee': ['coffeescript/register', 'coffee-script/register', 'coffeescript', 'coffee-script'],
  '.coffee.md': ['coffeescript/register', 'coffee-script/register', 'coffeescript', 'coffee-script'],
  '.csv': 'require-csv',
  '.eg': 'earlgrey/register',
  '.esm.js': {
    module: 'esm',
    register: function(hook) {
      // register on .js extension due to https://github.com/joyent/node/blob/v0.12.0/lib/module.js#L353
      // which only captures the final extension (.babel.js -> .js)